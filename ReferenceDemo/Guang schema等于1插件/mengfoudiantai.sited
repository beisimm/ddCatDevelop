<!--?xml version="1.0" encoding="UTF-8" ?-->
<sited  ver="5" debug="1"  engine="27" schema="1">
	<meta>
	<ua></ua>
	<guid></guid>
	<title>萌否电台</title>
	<author>Guang</author>
	<contact>未想好我空着</contact>
	<intro>[FM]刷新首页可换歌，可搜索单曲、专辑。Beyond The Time～メビウスの宇宙を越えて～</intro>
	<url>http://moe.fm</url>
	<expr>moe\.fm</expr>
	<logo>http://moe.fm/public/images/fm/favicon.ico?v=1420722841</logo>
	<encode>UTF-8</encode>
	<reward title="反馈" mail="wistn@qq.com">
		<item txt="欢迎打赏插件开发者Guang，反馈问题。" />
		<item />
		<item txt="点击或扫描二维码对[❤❤广]支付宝打赏" expr="https://qr.alipay.com/aex05979jbnzvi4fs3hx691" logo="http://ww3.sinaimg.cn/mw690/82d3f846gw1f8ah7nyz88j20by0by0sy.jpg" />
		<item />
		<item txt="扫描二维码对我的微信打赏" logo="http://ww3.sinaimg.cn/mw690/82d3f846gw1f8ah7oa4khj206b06bt9m.jpg" />
		<item />
		<item url="点击本行可联系QQ" expr="http://wpa.qq.com/msgrd?v=3&amp;uin=476375486&amp;site=qq&amp;menu=yes" />
		<item />
	</reward>
	</meta>
	<main dtype="3" btag="音乐">
		<home>
			<hots cache="0" title="随机" method="get" showImg="1" w="4" h="4" parse="hots_parse" url="http://moe.fm/listen/playlist?perpage=4" />
			<updates title="歌单" showImg="1" w="1" h="1" cache="1d" method="get" parse="updates_parse" url="http://moe.fm/radios" />
			<tags title="分类">
	            <tags cache="1d" method="get" header="cookie;referer;Accept=application/json;X-Requested-With=XMLHttpRequest" parse="tags_parse" url="http://moe.fm/albums"/>
			</tags>
		</home>
		<search cache="1d" method="get" parse="search_parse" url="http://moe.fm/search?q=@key&amp;page=@page" />
		<tag>
			<tag cache="1d" method="get" parse="updates_parse" addPage="1" expr="radios\/page" showImg="1" w="1" h="1" />
			<tag cache="1d" method="get" parse="tag_parse2" expr="albums\/page\/@page" showImg="1" w="1" h="1" /></tag>
		<book>
			<book cache="1d" method="get" parse="book_parse1" expr="radio\/" dtype="3" />
			<book cache="1d" method="get" parse="book_parse2" expr="music\/" dtype="3" />
			<book cache="1d" method="get" buildUrl="section_buildUrl" parse="book_parse3" expr="song\/" dtype="7" style="12" /></book>
		<section cache="1d" method="get" buildUrl="section_buildUrl" parse="section_parse" style="12" /></main>
	<script>
		<require>
			<item url="http://sited.noear.org/addin/js/cheerio.js" lib="cheerio" /></require>
		<code>
			<![CDATA[
function urla(u) {
	var host = "http://moe.fm";
	if (u.indexOf("http") < 0) {
		if (u.substr(0, 1) != '/') u = host + '/' + u;
		else u = host + u;
	}
	return encodeURI(u);
}

function hots_parse(url, html) {
	var json = JSON.parse(html);
	var list = [];

	for (var i in json.playlist) {
		var item = json.playlist[i];
		if (item.url) {
			var bm = {};
			bm.name = item.title;
			bm.url = item.sub_url;
			bm.logo = item.cover.large;
			list.push(bm);
		}
	}
	return JSON.stringify(list);
}

function updates_parse(url, html) {
	var $ = cheerio.load(html);
	var list = [];
	if (url.indexOf('page') < 0) {
		list.push({
			'name': '更多热门个人电台歌单',
			'url': 'http://moe.fm/radios/page/@page'
		});
	}
	$('.browse-item').each(function() {
		var item = $(this);
		var num = item.find('.browse-sub-count').text();
		if (num) {

			var bm = {};
			bm.name = item.find('.browse-title a').text();
			bm.url = item.find('.browse-title a').attr('href');

			bm.logo = item.find('img').attr('src');
			bm.newSection = '';
			bm.updateTime = num.trim();
			list.push(bm);
		}
	});
	return JSON.stringify(list);
}

function tags_parse(url, html) {
	var $ = cheerio.load(html);
	var list = [];

	var bm = null;
	$('.lh-24 .tag').each(function () {
		var item = $(this);
		if (bm) {
			bm = {};
		} else {
			bm = {
				group : "标签云"
			};
		}
		bm.title = item.text();
		bm.url = item.attr('href').replace('albums', 'albums/page/@page');
		list.push(bm);
	});

	bm = null;
	$('.order_date').eq(0).nextAll().children('a').each(function () {
		var item = $(this);
		if (bm) {
			bm = {};
		} else {
			bm = {
				group : "年份"
			};
		}
		bm.title = item.text();
		bm.url = item.attr('href').replace('albums', 'albums/page/@page');
		list.push(bm);
	});

	bm = null;
	$('.mb-1 span.gray').nextAll().each(function () {
		var item = $(this);
		if (bm) {
			bm = {};
		} else {
			bm = {
				group : "字母"
			};
		}
		bm.title = item.text();
		bm.url = item.attr('href').replace('albums', 'albums/page/@page');
		list.push(bm);
	});
	return JSON.stringify(list);
}


function tag_parse2(url, html) {
	var $ = cheerio.load(html);
	var list = [];

	$('.browse-list .browse-item').each(function() {
		var item = $(this);
		var num = item.find('.browse-sub-count').text();
		if (num) {

			var bm = {};
			bm.name = item.find('.browse-title a').text();
			bm.url = item.find('.browse-title a').attr('href');

			bm.logo = item.find('img').attr('src');
			bm.newSection = '';
			bm.updateTime = '发行日期：' + item.find('.browse-date').text().trim();
			list.push(bm);
		}
	});
	return JSON.stringify(list);
}

function search_parse(url, html) {
	var $ = cheerio.load(html);
	var list = [];
	$('.browse-list .browse-item').each(function() {
		var bm = {};
		bm.name = $(this).find('a').eq(0).attr('title');
		bm.url = $(this).find('a').eq(0).attr('href');
		bm.logo = $(this).find('img').attr('src');
		bm.author = $(this).find('.browse-meta').text().trim();
		bm.updateTime = '发行日期：' + $(this).find('.browse-date').text().trim();
		bm.btag = "专辑";
		list.push(bm);
	});
	$('.mb-2 .pb-05').eq(0).remove();
	$('.mb-2 .pb-05').each(function() {
		var bm = {};
		bm.name = $(this).children('.ml-4').text().trim();
		bm.url = $(this).children('a').attr('href');
		bm.logo = $(this).find('img').attr('src');
		bm.updateTime = '可进入专辑：' + $(this).children('a').text().trim();
		bm.btag = "歌曲";
		list.push(bm);
	});

	return JSON.stringify(list);
}

function book_parse1(url, html) {
	var $ = cheerio.load(html);
	var data = {};

	data.name = $('.cover').eq(0).attr('alt');
	data.author = '';
	data.logo = $('.cover').eq(0).attr('src');
	data.intro = $('.radio-about p').text().trim();

	data.updateTime = "";
	data.isSectionsAsc=1;
	data.sections = [];
	$('#wr_list .wr-item').each(function() {
		var url0 = $(this).find('a').eq(1).attr('href');
		var name0 = $(this).find('a').eq(1).text();
		var bm = {
			name: name0,
			url: url0
		};
		if (url0 && url0.search(/\d+/) >= 0) {
			data.sections.push(bm);
		}
	});
	return JSON.stringify(data);
}

function book_parse2(url, html) {
	var $ = cheerio.load(html);
	var data = {};

	data.name = $('.cover').eq(0).attr('alt');
	data.author = '';
	data.logo = $('.cover').eq(0).attr('src');
	data.intro = $('meta[name="description"]').attr('content');
	data.updateTime = '';
	data.isSectionsAsc=1;
	data.sections = [];
	$('.play-list .item').each(function() {
		var url0 = $(this).find('.item-inner a').eq(1).attr('href');
		var name0 = $(this).find('.item-inner a').eq(1).text();
		var bm = {
			name: name0,
			url: url0
		};
		if (url0 && url0.search(/\d+/) >= 0) {
			data.sections.push(bm);
		}
	});
	return JSON.stringify(data);
}
function book_parse3(url, html) {
	var playlist = html.match(/\<script>\s*moeData.playlist[\w\W]+?({[\s\S]+?})\s*;\s*if/i)[1];
	var jData = JSON.parse(playlist);
	var item = jData.playlist[0];
	if (item.url) {
		return JSON.stringify({
		name: item.title,
		logo: item.cover.large,
		list: [{
			url: item.url,
			logo: item.cover.large,
			type: ".mp3",
			mime: "audio/x-mpeg"
			}]
		});
	} else {
		return "";
	}
}
function section_buildUrl(url) {
	var id = url.match(/http.+?(\d+)/i)[1];
	url = 'http://moe.fm/listen/h5?song=' + id;
	return url;
}

function section_parse(url, html) {
	var playlist = html.match(/\<script>\s*moeData.playlist[\w\W]+?({[\s\S]+?})\s*;\s*if/i)[1];
	var jData = JSON.parse(playlist);
	var item = jData.playlist[0];
	if (item.url) {
		return JSON.stringify([{
			url: item.url,
			logo: item.cover.large,
			type: ".mp3",
			mime: "audio/x-mpeg"
		}]);
	} else {
		return "";
	}
}
			]]>
		</code>
    </script>
</sited>